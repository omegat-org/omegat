plugins {
    id 'java-library'
}

dependencies {
    compileOnly(project.rootProject)
    if (providedLibsDir.directory) {
        compileOnly fileTree(dir: providedLibsDir, includes: ['**/commons-*.jar', '**/lib-mnemonics*.jar',
                                                              '**/maligna-*.jar', '**/supertmxmerge-*.jar',
                                                              '**/slf4j*'])
    } else {
        // Aligner
        implementation(libs.loomchild.maligna)
        compileOnly(libs.madlonkay.supertmxmerge)
        compileOnly(libs.omegat.mnemonics)
        compileOnly(libs.commons.io)
        compileOnly(libs.slf4j.format.jdk14)
    }
    testImplementation(testFixtures(project.rootProject))
    testImplementation(libs.commons.io)
}

jar {
    archiveAppendix.set("omegat")
    destinationDirectory.set(new File(rootProject.buildDir, "modules"))
    from configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)}
    def pluginProp = loadProperties(file('plugin.properties'))
    manifest {
        attributes('License': 'GNU Public License version 3 or later',
                'Implementation-Version': project.version,
                'OmegaT-Plugins': pluginProp.Class,
                'Plugin-Author': pluginProp.Author,
                'Plugin-Link': pluginProp.Link,
                'Plugin-Version': pluginProp.Version,
                'Plugin-Name': pluginProp.Name,
                'Plugin-Category': pluginProp.Category,
                'Plugin-Description': pluginProp.Description
        )
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
