trigger:
  branches:
    include:
      - master
      - releases/*
      - refs/tags/v*
    exclude:
      - release/*
      - standard

pr:
  branches:
    include:
      - master
      - releases/*
    exclude:
      - standard
  paths:
    exclude:
      - docs
      - doc_src
      - docs_devel
      - README.md

schedules:
  - cron: '0 12 * * 6'
    displayName: Weekly saturday build
    branches:
      include:
        - master
        - releases/*
    always: true

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isReleasesBranch: $[contains(variables['Build.SourceBranch'], 'refs/heads/releases/')]
  isRelease: $[contains(variables['Build.SourceBranch'], 'refs/tags/v')]
  isSchedule: $[eq(variables['Build.Reason'], 'Schedule')]
  GRADLE_USER_HOME: '$(Pipeline.Workspace)/.gradle'

stages:
- stage: DocCI
  pool:
    vmImage: 'ubuntu-22.04'
  jobs:
  - job: preCheck
    steps:
    - bash: |
        files=$(git diff-tree --no-commit-id --name-only -r HEAD)
        for file in $files; do
          if [[ $file =~ ^doc_src.* ]]; then
            echo "##vso[task.setvariable variable=changeDoc;isOutput=true]True"
          fi
        done
      name: checkChangeDoc
  - job: DocCIJob
    dependsOn: preCheck
    condition: and(eq(dependencies.preCheck.outputs['checkChangeDoc.changeDoc'], 'True'), ne(variables.isRelease, true))
    displayName: build and publish manual snapshot version
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: ci/azure-pipelines/build_doc_steps.yml
      - template: ci/azure-pipelines/publish_manual_snapshot.yml

- stage: Test
  condition: not(or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual'), eq(variables.isRelease, true)))
  jobs:
  - job: TestOnJava11
    displayName: on Java 11
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: ci/azure-pipelines/test_steps.yml
  - job: TestOnJava17
    displayName: on Java 17
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: ci/azure-pipelines/test_java17_steps.yml
  - job: testOnWindows
    displayName: on Java 17 on Windows
    pool:
      vmImage: 'windows-latest'
    steps:
      - template: ci/azure-pipelines/test_java17_steps.yml
  - job: testOnMac
    displayName: on Java 17 on mac
    pool:
      vmImage: 'macOS-latest'
    steps:
      - template: ci/azure-pipelines/test_java17_steps.yml

  # Weekly release steps will be triggerred after integration-test succeeded.
- stage: Weekly
  condition: or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual'))
  jobs:
  - job: CheckForWeekly
    displayName: Test and Check
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: ci/azure-pipelines/check_steps.yml
  - job: IntegrationTestForWeekly
    displayName: Integration Test
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: ci/azure-pipelines/integ_test_steps.yml
        parameters:
          testType: 'GIT'
          duration: 600
  - job: WeeklyBuild
    displayName: Build for master weekly
    dependsOn:
      - CheckForWeekly
      - IntegrationTestForWeekly
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - script: |
          version=$(./gradlew -qq printVersion | head -n -1 )
          echo "##vso[task.setvariable variable=version]$version"
      - template: ci/azure-pipelines/build_steps.yml
      - template: ci/azure-pipelines/publish_weekly.yml
        parameters:
          omegatVersion: $(version)

  # Release steps will run on the main and/or release branch with tags.
- stage: Release
  condition: and(succeeded(), eq(variables.isRelease, true))
  jobs:
  - job: CheckForRelease
    displayName: Test and Check
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: ci/azure-pipelines/check_steps.yml
  - job: ReleaseBuild
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - script: |
          version=$(./gradlew -qq printVersion | head -n -1 )
          echo "##vso[task.setvariable variable=version]$version"
      - template: ci/azure-pipelines/build_steps.yml
      - template: ci/azure-pipelines/publish_release.yml
        parameters:
          omegatVersion: $(version)
