
ext.makeLinuxTask = { args ->
    def distTaskName = "install" + args.name.capitalize() + "Dist"
    def tarTaskName = args.name + "DistTarBz"
    def parentTask = tasks.getByName(args.parentTaskName)
    tasks.register(distTaskName, Sync) {
        group = 'distribution'
        description = "Create a linux installDist for ${args.name}. "
        with distributions.main.contents
        destinationDir = file(layout.buildDirectory.file("install/${application.applicationName}-${args.suffix}"))
        onlyIf {
            condition(!args.jrePath.empty, 'JRE not found')
        }
        doFirst {
            delete "$destinationDir/jre"
        }
        if (args.jrePath && !args.jrePath.empty) {
            from(tarTree(args.jrePath.singleFile)) {
                includeEmptyDirs = false
                eachFile {
                    replaceRelativePathSegment(it, /jdk.*-jre/, 'jre')
                }
            }
        }
    }
    tasks.register(tarTaskName, Tar) {
        description = "Create a Linux distribution for ${args.name}. "
        with distributions.main.contents
        onlyIf {
            condition(!args.jrePath.empty, 'JRE not found')
        }
        if (args.jrePath && !args.jrePath.empty) {
            from(tarTree(args.jrePath.singleFile)) {
                includeEmptyDirs = false
                eachFile {
                    replaceRelativePathSegment(it, /jdk.*-jre/, 'jre')
                }
            }
        }
        application {
            archiveFileName.set("${applicationName}_${project.version}${omtVersion.beta}_${args.suffix}.tar.bz2")
        }
        compression = Compression.BZIP2
        archiveExtension = 'tar.bz2'
        group = 'omegat distribution'
    }
    assemble.dependsOn tarTaskName
    parentTask.dependsOn tarTaskName
}