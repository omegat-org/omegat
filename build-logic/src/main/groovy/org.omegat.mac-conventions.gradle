
configurations {
    genMac
}

repositories {
    mavenCentral()
}

dependencies {
    genMac(libs.omegat.appbundler)
}

tasks.register('genMac') {
    def appbundlerClasspath = configurations.genMac.asPath
    def outDir = layout.buildDirectory.file("appbundler").get().toString()
    def appName = appName
    def appClass = mainClassName
    description = 'Generate the Mac .app skeleton. Depends AppBundler (https://github.com/TheInfiniteKind/appbundler)'
    outputs.dir layout.buildDirectory.file("appbundler")
    doLast {
        ant.taskdef(name: 'appbundler',
                classname: 'com.oracle.appbundler.AppBundlerTask',
                classpath: appbundlerClasspath)
        ant.appbundler(outputdirectory: outDir,
                name: appName,
                displayname: appName,
                executablename: appName,
                identifier: 'org.omegat.OmegaT',
                icon: 'images/OmegaT.icns',
                version: '${version}',
                jvmrequired: '${jvmRequired}',
                shortversion: '${version}',
                mainclassname: appClass) {
            option(value: "-Xdock:name=${appName}")
            option(value: "-Dapple.awt.application.name=${appName}")
            option(value: "-Dapple.awt.application.appearance=system")
            argument(value: '--config-file=${configfile}')
            bundledocument(extensions: 'project',
                    name: "${appName} Project",
                    role: 'editor',
                    icon: 'images/OmegaT.icns')
            bundledocument(extensions: '*',
                    name: 'All Files',
                    role: 'none')
            plistentry(key: 'JVMRuntime', value: 'jre.bundle')
        }
    }
}
