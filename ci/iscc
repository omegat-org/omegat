#!/usr/bin/env bash

relpaths() {
    for arg in "$@"; do printf -- "%s\n" "${arg#$PWD/}"; done
}

bindpaths() {
    for arg in $(relpaths "$@"); do
        if [ -e "$arg" ] && [[ "$arg" == /* ]]; then
            printf -- "-v %s:%s" "$arg" "$arg"
        fi
    done
}

# workaround for build failure on CI env.
# see https://sourceforge.net/p/omegat/bugs/1228/
PUID=`id -u`
PGID=`id -g`
IMAGE=omegatorg/innosetup:innosetup6
CONTEXT=`mktemp -d`

cat << __EOF__  > $CONTEXT/Dockerfile
FROM docker.io/amake/innosetup:innosetup6-buster
USER root
RUN usermod -u $PUID -o xclient && groupmod -g $PGID -o xusers
RUN chown -R $PUID:$PGID /home/xclient /work
USER xclient
ENV HOME /home/xclient
ENV WINEPREFIX /home/xclient/.wine
ENV WINEARCH win32
WORKDIR /work
ENTRYPOINT ["iscc"]
__EOF__

CMD="$(type -p docker)" || [[ -e $CMD ]] || CMD="$(type -p nerdctl)"
if ! $CMD build -t $IMAGE $CONTEXT ; then
  echo Container build error for ISCC, abort...
  exit 1
fi
exec $CMD run -i --rm  \
   -u `id -u`:`id -g` \
   -v "$PWD":/work \
   $(bindpaths "$@") \
   $IMAGE \
   $(relpaths "$@")
