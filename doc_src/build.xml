<?xml version="1.0" encoding="UTF-8"?>

<!--
/**************************************************************************
 OmegaT - Java based Computer Assisted Translation (CAT) tool
 Copyright (C) 2011-2012 Didier Briel
               2014-2015 Didier Briel
               2019 Aaron Madlon-Kay

               Home page: http://www.omegat.org/
               Support center: https://omegat.org/support

 This file is part of OmegaT.

 OmegaT is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 OmegaT is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
**************************************************************************/
-->
<project name="OmegaT documentation" default="all">

    <include file="../../doc_src_paths.xml"/>

    <target name="include">
        <exec executable="xmllint"
              dir="." >
            <arg value="--xinclude" />
            <arg value="-o" />
            <arg value="${language}/index.xml" />
            <arg value="${language}/OmegaTUsersManual_xinclude full.xml" />
        </exec>
    </target>

    <!-- The fonts must be available in the system -->
    <condition property="font.family" value="Noto Sans CJK JP">
        <equals arg1="${language}" arg2="ja"/>
    </condition>
    <condition property="monospace.font.family" value="Noto Sans CJK JP">
        <equals arg1="${language}" arg2="ja"/>
    </condition>
    <condition property="font.family" value="Noto Sans CJK SC">
        <equals arg1="${language}" arg2="zh_CN"/>
    </condition>
    <condition property="monospace.font.family" value="Noto Sans CJK SC">
        <equals arg1="${language}" arg2="zh_CN"/>
    </condition>
    <property name="font.family" value="DejaVu Sans"/>
    <property name="monospace.font.family" value="DejaVu Sans Mono"/>

    <target name="fo" depends="include">
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
            <arg value="-o" />
            <arg value="${target}/OmegaT_documentation_${language}.fo" />
            <arg value="${language}/index.xml" />
            <arg value="${dbk}/fo/docbook.xsl" />
            <arg value="paper.type=A4" />
            <arg value="page.margin.inner=18mm" />
            <arg value="page.margin.outer=12mm" />
            <arg value="page.margin.top=8mm" />
            <arg value="page.margin.bottom=8mm" />
            <arg value="generate.toc=book toc,title,figure,table" />
            <arg value="chapter.autolabel=1" />
            <arg value="section.autolabel=1" />
            <arg value="toc.max.depth=2" />
            <arg value="indent=no" />
            <arg value="fop.extension=1" />
            <arg value="insert.olink.pdf.frag=1" />
            <arg value="body.font.family=${font.family}" />
            <arg value="title.font.family=${font.family}" />
            <arg value="monospace.font.family=${monospace.font.family}" />
            <classpath>
                <pathelement location="${saxon}"/>
                <pathelement path="${saxon}"/>
            </classpath>
        </java>
    </target>

    <property name="fop.home.lib" value="${fop.home}/lib"/>
    <property name="fop.home.build" value="${fop.home}/build"/>

    <taskdef name="fop"
             classname="org.apache.fop.tools.anttasks.Fop">
        <classpath>
            <fileset dir="${fop.home.lib}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${fop.home.build}">
                <include name="fop*.jar"/>
             </fileset>
        </classpath>
    </taskdef>

    <target name="pdf" depends="fo">
        <fop format="application/pdf"
             fofile="${target}/OmegaT_documentation_${language}.fo"
             outfile="${target}/OmegaT_documentation_${language}.PDF"
             basedir="${language}/"
             userconfig="fop.xconf"
             force="true" />
    </target>

    <condition property="version.properties.filename"
               value="version.properties"
               else="version_${language}.properties">
        <equals arg1="${language}" arg2="en"/>
    </condition>

    <target name="xhtml5-chunk" depends="include">
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
            <arg value="${language}/index.xml" />
            <arg value="${dbk}/xhtml5/chunk.xsl" />
            <arg value="use.id.as.filename=1" />
            <arg value="html.ext=.html"/>
            <arg value="base.dir=${language}/xhtml5" />
            <arg value="chunk.section.depth=0" />
            <arg value="chunk.first.sections=0" />
            <arg value="chunker.output.encoding=UTF-8" />
            <arg value="chunker.output.indent=yes" />
            <arg value="use.extensions=1" />
            <arg value="chapter.autolabel=0" />
            <arg value="section.autolabel=0" />
            <arg value="tablecolumns.extension=0" />
            <arg value="toc.max.depth=2" />
            <arg value="generate.toc=book toc,title,figure,table chapter toc appendix toc" />
            <arg value="generate.index=1" />
            <arg value="root.filename=index_" />
            <arg value="html.stylesheet=OmegaT.css" />
            <arg value="html.stylesheet=OmegaT.css" />
            <arg value="docbook.css.link=0" />
            <arg value="saxon.character.representation=native;decimal"/>
            <classpath>
                <pathelement location="${saxon}" />
                <pathelement path="${saxon}" />
            </classpath>
        </java>
    </target>

    <target name="check-first-steps">
        <available property="FirstSteps.exists" file="../doc_src/${language}/First_Steps.xml"/>
    </target>

    <target name="check-manual-exist">
        <condition property="ManualContents.exists">
            <or>
                <available file="../doc_src/${language}/Introduction.xml"/>
                <available file="../doc_src/${language}/InstallingAndRunning.xml"/>
                <available file="../doc_src/${language}/AboutOmegaT.xml"/>
            </or>
        </condition>
    </target>

    <target name="old-css" depends="check-first-steps" unless="${FirstSteps.exists}">
        <copy file="OmegaT_old.css"
              tofile="${target}/OmegaT.css"
              force="true"/>
    </target>

    <target name="new-css" depends="check-first-steps" if="${FirstSteps.exists}">
        <copy file="OmegaT_new.css"
              tofile="${target}/OmegaT.css"
              force="true"/>
    </target>

    <target name="css" depends="old-css,new-css"/>

    <target name="generate-instant-start" depends="check-first-steps, old-css, instant-start-pictures" unless="${FirstSteps.exists}">
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
            <arg value="-o" />
            <arg value="${target}/first_steps.html" />
            <arg value="${language}/InstantStartGuide.xml" />
            <arg value="../../docbook-utf8.xsl" />
            <arg value="base.dir=${target}/" />
            <arg value="chunk.section.depth=0" />
            <arg value="chunk.first.sections=0" />
            <arg value="use.extensions=1" />
            <arg value="chapter.autolabel=0" />
            <arg value="section.autolabel=0" />
            <arg value="tablecolumns.extension=0" />
            <arg value="toc.max.depth=0" />
            <arg value="generate.toc=0" />
            <arg value="generate.index=0" />
            <arg value="html.stylesheet=OmegaT.css" />
            <classpath>
                <pathelement location="${saxon}" />
                <pathelement path="${saxon}" />
            </classpath>
        </java>
    </target>

    <target name="instant-start" depends="generate-instant-start"/>

    <target name="first-steps" depends="check-first-steps, new-css" if="${FirstSteps.exists}">
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
            <arg value="-o" />
            <arg value="${target}/first_steps.html" />
            <arg value="${language}/First_Steps.xml" />
            <arg value="../../docbook-utf8.xsl" />
            <arg value="base.dir=${target}/" />
            <arg value="chunk.section.depth=0" />
            <arg value="chunk.first.sections=0" />
            <arg value="use.extensions=1" />
            <arg value="chapter.autolabel=0" />
            <arg value="section.autolabel=0" />
            <arg value="tablecolumns.extension=0" />
            <arg value="toc.max.depth=0" />
            <arg value="generate.toc=0" />
            <arg value="generate.index=0" />
            <arg value="html.stylesheet=OmegaT.css" />
            <classpath>
                <pathelement location="${saxon}" />
                <pathelement path="${saxon}" />
            </classpath>
        </java>
    </target>

    <target name="pictures">
        <copy todir="${target}/images">
            <fileset dir="${language}/images" />
        </copy>
    </target>

    <target name="instant-start-pictures">
        <copy todir="${target}/images">
            <fileset dir="${language}/images">
                <include name="InstantGuide*.png"/>
            </fileset>
        </copy>
    </target>

    <target name="whc-toc" depends="xhtml5-chunk">
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
            <arg value="-o" />
            <arg value="${language}/xhtml5/toc.xml" />
            <arg value="${language}/xhtml5/index_.html" />
            <arg value="whc-toc.xsl" />
            <arg value="language=${language}"/>
            <classpath>
                <pathelement location="${saxon}" />
                <pathelement path="${saxon}" />
            </classpath>
        </java>
    </target>

    <target name="whc-index" depends="xhtml5-chunk">
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
            <arg value="-o" />
            <arg value="${language}/xhtml5/index.html" />
            <arg value="${language}/xhtml5/index_.html" />
            <arg value="whc-index.xsl" />
            <arg value="language=${language}"/>
            <classpath>
                <pathelement location="${saxon}" />
                <pathelement path="${saxon}" />
            </classpath>
        </java>
        <delete file="${language}/xhtml5/index_.html"/>
    </target>

    <target name="whc-header">
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
            <arg value="-o" />
            <arg value="${language}/xhtml5/header.xhtml" />
            <arg value="${language}/index.xml" />
            <arg value="whc-header.xsl" />
            <arg value="language=${language}"/>
            <classpath>
                <pathelement location="${saxon}" />
                <pathelement path="${saxon}" />
            </classpath>
        </java>
        <copy file="../images/OmegaT.svg" tofile="${target}/images/omegat.svg"/>
    </target>

    <target name="whc" depends="whc-toc,whc-header,whc-index">
        <fileset id="dist.contents" dir="${language}/xhtml5" includes="*.html"/>
        <pathconvert property="prop.dist.contents" refid="dist.contents" pathsep=" "/>

        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              jar="${whc}" >
            <arg line="-p layout simple"/>
            <arg line="-p user-header ${language}/xhtml5/header.xhtml"/>
            <arg line="-p --navigation-background-color #FDFDFD"/>
            <arg line="-p --field-background-color #FDFDFD"/>
            <arg line="-p --panel-background-color #FDFDFD"/>
            <arg line="-p local-jquery yes"/>
            <arg value="-toc"/>
            <arg value="${language}/xhtml5/toc.xml"/>
            <arg value="-index"/>
            <arg value="${language}/xhtml5/index.html"/>
            <arg value="${target}"/>
            <arg line="${prop.dist.contents}"/>
        </java>
        <delete file="${language}/xhtml5/index_.html"/>
    </target>

    <target name="html5" depends="pictures,css,whc" />

    <target name="javahelp" depends="include"> <!-- Not yet operationnal -->
        <java dir="."
              fork="true"
              failonerror="true"
              maxmemory="128m"
              classname="com.icl.saxon.StyleSheet" >
             <arg value="${language}/index.xml" />
             <arg value="${dbk}/javahelp/javahelp.xsl" />
             <arg value="use.id.as.filename=1" />
             <arg value="base.dir=${language}/javahelp/" />
             <arg value="use.extensions=1" />
             <arg value="chapter.autolabel=1" />
             <arg value="section.autolabel=1" />
             <arg value="tablecolumns.extension=0" />
             <arg value="toc.max.depth=2" />
             <arg value="generate.toc=book toc,title,figure,table chapter toc appendix toc" />
             <arg value="generate.index=1" />
             <classpath>
                 <pathelement location="${saxon}" />
                 <pathelement path="${saxon}" />
             </classpath>
        </java>
         <copy todir="${language}/javahelp/images">
             <fileset dir="${language}/images" />
         </copy>
     </target>

    <target name="all" depends="pdf,html5" />

</project>
