<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../docbook-xml-4.5/docbookx.dtd" [
<!ENTITY % manualvariables SYSTEM "manualvariables.mod">
%manualvariables;
]>
<section id="running.omegat">
  <title id="running.omegat.title">Run
  OmegaT</title>

  <section id="running.omegat.on.windows">
	<title id="running.omegat.on.windows.title">On Windows</title>

	<para>The simplest way to launch OmegaT is to execute the
	<filename>OmegaT.exe</filename> program. The options for the program
	start-up will be read from the <filename>OmegaT.l4J.ini</filename> file,
	which resides in the same folder as the exe file and which you can edit
	to reflect your setup. The following example for the INI file reserves 1
	GB of memory, requests French as the user language and Canada as the
	country:</para>

	<programlisting># OmegaT.exe runtime configuration
	# To use a parameter, remove the '#' before the '-'
	# Memory
	-Xmx1024M
	# Language
	-Duser.language=FR
	# Country
	-Duser.country=CA</programlisting>


	<para>Advice: if OmegaT works slowly in Remote Desktop sessions under
	Windows, you may use this option:</para>

	<programlisting>-Dsun.java2d.noddraw=false</programlisting>
  </section>

  <section id="running.omegat.on.linux">
	<title id="running.omegat.on.linux.title">On Linux</title>

	<para>You can launch OmegaT from the command line with a script that
	includes start-up options. See <link
	endterm="launch.with.command.line.title"
	linkend="launch.with.command.line"/> for details.</para>

	<para>You can also click on <filename>OmegaT.jar</filename> to launch it
	directly if the <filename>.jar</filename> extension is associated to the
	system Java launcher.</para>

	<para>The package also provides a <filename>omegat.kaptn</filename>
	Kaptain script, which KDE users might find useful, as well as an
	<filename>OmegaT</filename> bash script that automatically launches the
	appropriate <application>java</application> command to run
	OmegaT.</para>
  </section>

  <section id="running.omegat.on.macos">
	<title id="running.omegat.on.macos.title">On macOS</title>

	<para>Double-click on <filename>OmegaT.app</filename> or click on its
	location in the Dock.</para>

	<para><filename>OmegaT.app</filename> comes with an
	<filename>OmegaT</filename> executable located in
	<filename>OmegaT.app/Contents/MacOS/</filename> that you can also use to
	launch multiple instances of <filename>OmegaT.app</filename>.</para>

	<para>And it also comes with the generic <filename>OmegaT.jar</filename>
	file located in <filename>OmegaT.app/Contents/MacOS/Java/</filename> that
	you can use to launch OmegaT from the command line. See <link
	endterm="launch.with.command.line.title"
	linkend="launch.with.command.line"/> for details.</para>

	<para>You can modify the behavior of OmegaT.app by editing the
	<filename>Configuration.properties</filename> (OmegaT configuration) as
	well as the <filename>Info.plist</filename> (Java configuration) files
	located inside the OmegaT.app package.</para>

	<para><filename>Configuration.properties</filename> is located in
	<filename>Contents/Resources/</filename>.</para>
	<para><filename>Info.plist</filename> is located in
	<filename>Contents/</filename>.</para>

	<note><para>To access the files inside <filename>OmegaT.app</filename>,
	right-click on <filename>OmegaT.app</filename> and select “Show Package
	Contents”.</para></note>

	<para>Use your text editor of choice to modify the files.</para>

	<variablelist>
	  <varlistentry>
		<term>Configuration.properties</term>
		<listitem>
		  <para>For predefined options, remove the <literal>#</literal> before a
		  parameter to enable it. For example,
		  <literal>user.language=ja</literal> (without the <literal>#</literal>)
		  will launch OmegaT with the user interface in Japanese.</para>
		</listitem>
	  </varlistentry>
	  <varlistentry>
		<term>Info.plist</term>
		<listitem>
		  <para>For example, to change the amount of memory available uncomment
		  the line</para>
		  <para><literal>&lt;!-- &lt;string&gt;-Xmx6g&lt;/string&gt;
		  --&gt;</literal></para>
		  <para>by removing the <literal>&lt;!--</literal> and
		  <literal>--&gt;</literal>.</para>
		  <para>This will launch OmegaT with 6 GB of
		  memory; change the <literal>6g</literal> to the desired amount.</para>
		</listitem>
	  </varlistentry>
	</variablelist>
	
	<note><para><filename>OmegaT.app</filename> can make use of macOS Services.
	You can also use AppleScript, Automator or Shortcuts to create
	Services or scripts that will automate frequent actions.</para></note>
  </section>

  <section id="running.omegat.on.other.systems">
	<title id="running.omegat.on.other.systems.title">On other platforms</title>

	<para>Methods vary from one system to another, but in general, once OmegaT
	is installed, you can launch it directly from the command line.  See <link
	endterm="launch.with.command.line.title"
	linkend="launch.with.command.line"/> for details.</para>

	<para>You can
	create a script that includes the desired command line launch
	parameters. If <filename>.jar</filename> files are properly associated
	with &javaversionlong; and your PATH settings are correct, you can also
	simply click (or double-click) on <filename>OmegaT.jar</filename> to
	launch it directly.</para>

	<para>Consult the documentation for your system for more
	information.</para>
  </section>
  
  <section id="launch.with.command.line">
	<title id="launch.with.command.line.title">Command line launch</title>
	<para>Using the command line allows you to set various options that control or
	modify the behavior of the application. You can also define and save sets of
	options in scripts that you can then use to launch OmegaT for a particular
	purpose.</para>


	<section id="launch.with.command.line.tutorial">
	  <title id="launch.with.command.line.tutorial.title">Simplified
	  Overview</title>

	  <para>Before graphical interfaces became common, users interacted with
	  computers via a command-line interface (CLI), which requires typing
	  commands to give instructions to the computer. On modern systems, the
	  CLI is accessed through an application generally called a
	  &quot;terminal&quot; or &quot;console&quot;. For the sake of simplicity,
	  this manual refers to it as the terminal.</para>
	  
	  <para>On Windows, you can use either the <application>Command
	  Prompt</application> or <application>Powershell</application> as a
	  terminal. Both are available from the <guilabel>System Tools</guilabel>
	  folder of the <guilabel>Start Menu</guilabel>.</para>

	  <para>The macOS equivalent is the <application>Terminal</application>
	  application located in the <filename>Utilities</filename> folder of the
	  <filename>Applications</filename> main folder.</para>

	  <para>On Linux, the default terminal application for your distribution
	  should be available from the application menu or one of its
	  submenus.</para>

	  <para>In the terminal, you type commands and their associated parameters
	  to perform tasks. This makes it easy to perform certain tasks that would
	  be difficult to perform using a graphical interface.</para>

	  <note>
		<para>The syntax used to specify the location of an application or
		folder depends on the platform. On Windows, the (<code>\</code>
		character is used to separate folder and file names, while macOS and
		Linux the <code>/</code> to do so.</para>

		<para>Here are the default OmegaT.jar locations for
		each major platform: 
		<variablelist>
		  <varlistentry id="launch.with.command.line.windows">
			<term id="launch.with.command.line.windows.title">Windows</term>
			<listitem>
			  <para><filename>C:\Program Files\OmegaT\OmegaT.jar</filename></para>
			</listitem>
		  </varlistentry>
		  <varlistentry id="launch.with.command.line.macos">
			<term id="launch.with.command.line.macos.title">Macos</term>
			<listitem>
			  <para><filename>/Applications/OmegaT.app/Contents/Java/OmegaT.jar</filename></para>
			</listitem>
		  </varlistentry>
		  <varlistentry id="launch.with.command.line.linux">
			<term id="launch.with.command.line.linux.title">Linux</term>
			<listitem>
			  <para><filename>/opt/omegat/OmegaT.jar</filename></para>
			</listitem>
		  </varlistentry>
		</variablelist>
		That location is written <filename>path/to/OmegaT.jar</filename> in this chapter but you'll have to replace it with the real location on your platform.
		</para>
	  </note>	
	</section>

	<section id="launch.with.command.line.omegat.terminal.command.syntax">
	  <title
		  id="launch.with.command.line.omegat.terminal.command.syntax.title">Command syntax</title>

	  <para>The syntax to launch OmegaT from the terminal is:
	  <programlisting>java -jar &lt;java parameters&gt; path/to/OmegaT.jar &lt;OmegaT parameters&gt; </programlisting></para>
	  <para>
		<variablelist>
		  <varlistentry id="launch.with.command.line.java.jar">
			<term id="launch.with.command.line.java.jar.title">java -jar</term>
			<listitem>
			  <para>This command tells the Java Virtual Machine to run a
			  Jar package.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry id="launch.with.command.line.intro.java.parameters">
			<term id="launch.with.command.line.intro.java.parameters.title"><emphasis>&lt;java parameters&gt;</emphasis></term>
			<listitem>
			  <para>Optional parameters accepted by the
			  <command>java</command> command. The parameters relevant
			  to running OmegaT are described <link
			  linkend="launch.with.command.line.java.parameters">below.</link></para>
			</listitem>					
		  </varlistentry>
		  <varlistentry id="launch.with.command.line.intro.omegat.jar">
			<term id="launch.with.command.line.intro.omegat.jar.title">path/to/OmegaT.jar</term>
			<listitem>
			  <para>The location of the OmegaT java executable.</para>
			  
			</listitem>
		  </varlistentry>
		  <varlistentry id="launch.with.command.line.intro.omegat.parameters">
			<term id="launch.with.command.line.intro.omegat.parameters.title"><emphasis>&lt;OmegaT parameters&gt;</emphasis></term>
			<listitem>
			  <para>The options specific to OmegaT are described <link
			  linkend="launch.with.command.line.omegat.parameters">later
			  in this section</link></para>
			</listitem>					
		  </varlistentry>
		</variablelist>
	  </para>
	</section>

	<section id="launch.with.command.line.java.parameters">
	  <title id="launch.with.command.line.java.parameters.title">Java
	  parameters</title>

	  <para>The list below presents parameters for the <command>java</command>
	  that can be useful when working with OmegaT.
	  <variablelist>
		<varlistentry id="launch.with.command.line.user.interface.language">
		  <term id="launch.with.command.line.user.interface.language.title">User interface language</term>
		  <listitem>
			<para><code>-Duser.language=LL</code></para>
			<para>Replace <code>LL</code> with the desired
			two-letter language code from the <ulink
			url="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO
			639.1</ulink> list.</para>
			<para>Using this option will launch OmegaT with the user
			interface in that language, if available (even
			partially). If the language is not available, OmegaT
			defaults to English even if the system uses a different
			default language.</para>
		  </listitem>
		</varlistentry>

		<varlistentry id="launch.with.command.line.user.country">
		  <term id="launch.with.command.line.user.country.title">User country</term>
		  <listitem>
			<para><code>-Duser.country=CC</code></para>
			<para>Replace <code>CC</code> with the desired
			two-letter country code from the <ulink
			url="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
			3166-1 alpha-2</ulink> list.</para>
			<para>This option combines with the previous user
			interface language parameter to specify a regional
			variant. If that variant is not available, the user
			interface follows the same priority as above.</para>
		  </listitem>
		</varlistentry>

		<varlistentry id="launch.with.command.line.maximum.memory.assignment">
		  <term id="launch.with.command.line.maximum.memory.assignment.title">Maximum memory assignment</term>
		  <listitem>
			<para><code>-XmxSIZE</code></para>
			<para>Replace <code>SIZE</code> is a number of bytes in
			multiples of 1024 and at least 2 MB, followed by
			<code>k</code> for kilobytes, <code>m</code> for
			megabytes, or <code>g</code> for gigabytes.</para>
		  </listitem>
		</varlistentry>

		<varlistentry id="launch.with.command.line.proxy.host.ip.address">
		  <term id="launch.with.command.line.proxy.host.ip.address.title">Proxy host ip address</term>
		  <listitem>
			<para><code>-Dhttp.proxyHost=.</code></para>
			<para>Replace <code>.</code> with the IP address of
			your proxy server, if your system uses one.</para>
		  </listitem>
		</varlistentry>

		<varlistentry id="launch.with.command.line.proxy.host.port.number">
		  <term id="launch.with.command.line.proxy.host.port.number.title">Proxy host port number</term>
		  <listitem>
			<para><code>-Dhttp.proxyPort=.</code></para>
			<para>Replace <code>.</code> with the port number your
			system uses to access the proxy server.</para>
		  </listitem>
		</varlistentry>
	  </variablelist>
	  </para>
	</section>

	<section id="launch.with.command.line.omegat.parameters">
	  <title id="launch.with.command.line.omegat.parameters.title">OmegaT
	  parameters</title>

	  <para>You can also get a list of these options in the terminal with the
	  <command>java -jar OmegaT.jar --help</command>
	  command. The OmegaT GUI is launched if no option is specified.</para>

	  <para>		
		<variablelist>
		  <varlistentry id="launch.with.command.line.general.options.">
			<term id="launch.with.command.line.general.options.title">General options:</term>
			<listitem>
			  <variablelist>
				<varlistentry id="launch.with.command.line.h.help">
				  <term id="launch.with.command.line.h.help.title">-h, --help</term>
				  <listitem>
					<para>Show usage information.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.path.to.an.omegat.project">
				  <term id="launch.with.command.line.path.to.an.omegat.project.title">path to an omegat project</term>
				  <listitem>
					<para>Launch the GUI and load the specified
					project</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.remote.project.">
				  <term id="launch.with.command.line.remote.project.title">--remote-project
				  <emphasis>&lt;path-to-omegat-project-file&gt;</emphasis></term>
				  <listitem>
					<para>Download the OmegaT project from the
					URL specified in
					<emphasis>&lt;path-to-omegat-project-file&gt;</emphasis>,
					and load it.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.no.team">
				  <term id="launch.with.command.line.no.team.title">--no-team</term>
				  <listitem>
					<para>Disable team project
					functionality. Use this option if you want
					to prevent OmegaT from synchronizing the
					project contents.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.team.init">
				  <term id="launch.with.command.line.team.init.title">team init <emphasis>SL</emphasis>
				  <emphasis>TL</emphasis></term>
				  <listitem>
					<para>Initialize a team project using
					<emphasis>SL</emphasis> and
					<emphasis>TL</emphasis> as the source and
					target two-letter language codes,
					respectively. </para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.disable.project.locking">
				  <term id="launch.with.command.line.disable.project.locking.title">--disable-project-locking</term>
				  <listitem>
					<para>Do not lock the omegat.project file.</para>
					<para>On some platforms, the omegat.project
					file is locked by default and attempting to
					open an already open project in another
					instance of OmegaT results in an error. This
					option prevents that error.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.disable.location.save">
				  <term id="launch.with.command.line.disable.location.save.title">--disable-location-save</term>
				  <listitem>
					<para>Do not remember the last directory
					opened in the file picker.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.itokenizer.lt.classname.gt.">
				  <term id="launch.with.command.line.itokenizer.lt.classname.gt.title">--ITokenizer=&lt;classname&gt;</term>
				  <term>--ITokenizerTarget=&lt;classname&gt;</term>
				  <listitem>
					<para>Specify a source- or target-language
					tokenizer (using this option overrides
					project settings). See
					OmegaT.jar/META-INF/MANIFEST.MF for valid
					values.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.config.dir.">
				  <term id="launch.with.command.line.config.dir.title">--config-dir=<emphasis>&lt;path&gt;</emphasis></term>
				  <listitem>
					<para>The directory used to read and write
					OmegaT configuration files.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.config.file.">
				  <term id="launch.with.command.line.config.file.title">--config-file=<emphasis>&lt;path&gt;</emphasis></term>
				  <listitem>
					<para>A file written in the Java .properties
					format used to specify a batch of command line
					options.</para>
					<para>The options are presented as a list of
					<parameter>key=value</parameter> pairs. Both Java
					parameters and OmegaT options can be used.</para>
					<note>
					  <para>Remove the initial <code>-D</code> or
					  <code>-X</code> to use Java parameters:</para>
					  <programlisting>user.language=fr
					  config-dir="path/to/new/configdir"</programlisting>
					</note>
					<para>Almost all parameters presented in this
					function can be used in a config file. The notable
					exception is <code>remote-project</code>.</para>
					<para>It is possible to combine
					<code>--config-file</code> with other command line
					options compatible with launching the GUI. In such
					cases, options defined in the config file take
					precedence over any option with duplicate
					functionality also passed on the command
					line.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.resource.bundle.">
				  <term id="launch.with.command.line.resource.bundle.title">--resource-bundle=<emphasis>&lt;path&gt;</emphasis></term>
				  <listitem>
					<para>A Java .properties file to use for interface text.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.mode.console.translate.console.pseudotranslatetmx.console.align.">
				  <term id="launch.with.command.line.mode.console.translate.console.pseudotranslatetmx.console.align.title">--mode=[console mode name]</term>
				  <listitem>
					<para>Specify a mode other than the GUI default.The following
					options are available:</para>
					<variablelist>
					  <varlistentry id="launch.with.command.line.mode.console.translate">
						<term id="launch.with.command.line.mode.console.translate.title">--mode=console-translate</term>
						<listitem>
						  <para>In this mode, OmegaT attempts to translate the
						  files in the source folder with the available
						  translation memories.</para>
						  <para>This is useful if OmegaT is run on
						  a server with TMX files automatically fed to a project.
						  <variablelist>
							<varlistentry id="launch.with.command.line.source.pattern.lt.pattern.gt.">
							  <term id="launch.with.command.line.source.pattern.lt.pattern.gt.title">--source-pattern=&lt;pattern&gt;</term>
							  <listitem>
								<para>A whitelist of regular expressions defining
								the source files to process. Remember that in
								regular expressions, the period and backslash
								character must be escaped: &quot;\.&quot; and
								&quot;\\&quot;.</para>
								<para>Here are some typical examples:
								<variablelist>
								  <varlistentry id="launch.with.command.line.html">
									<term id="launch.with.command.line.html.title">.*\.html</term>
									<listitem>
									  <para>Translate all HTML files.</para>
									</listitem>
								  </varlistentry>
								  <varlistentry id="launch.with.command.line.test.html">
									<term id="launch.with.command.line.test.html.title">test\.html</term>
									<listitem>
									  <para>Only translate
									  <filename>test.html</filename> file in the
									  source folder itself. Any files also named
									  test.html in other subfolders will be
									  ignored.</para>
									</listitem>
								  </varlistentry>
								  <varlistentry id="launch.with.command.line.dir.test.html">
									<term id="launch.with.command.line.dir.test.html.title">dir-10\\test\.html</term>
									<listitem>
									  <para>Only translate the
									  <filename>test.html</filename> file in the
									  <filename
										  class="directory">dir-10</filename>
									  folder.</para>
									</listitem>
								  </varlistentry>
								</variablelist>
								See <link linkend="app.regex"
								endterm="app.regex.title"/> for details.
								</para>
							  </listitem>
							</varlistentry>
						  </variablelist>
						  </para>
						</listitem>
					  </varlistentry>

					  <varlistentry id="launch.with.command.line.mode.console.pseudotranslatetmx">
						<term id="launch.with.command.line.mode.console.pseudotranslatetmx.title">--mode=console-createpseudotranslatetmx</term>
						<listitem>
						  <para>In this mode OmegaT will create a TMX for the
						  whole project using only the source files.</para>
						  <para>Specify the
						  TMX file to be created with:
						  <variablelist>
							<varlistentry id="launch.with.command.line.pseudotranslatetmx.">
							  <term id="launch.with.command.line.pseudotranslatetmx.title">--pseudotranslatetmx=<emphasis>&lt;path&gt;</emphasis></term>
							  <listitem>
								<para>The output pseudotranslated TMX file.</para>
							  </listitem>
							</varlistentry>
							<varlistentry id="launch.with.command.line.pseudotranslatetype.equal.empty.">
							  <term id="launch.with.command.line.pseudotranslatetype.equal.empty.title">--pseudotranslatetype=[equal|empty]</term>
							  <listitem>
								<para>What to fill the pseudotranslated TMX
								with.</para>
							  </listitem>
							</varlistentry>
						  </variablelist>
						  </para>
						</listitem>
					  </varlistentry>

					  <varlistentry id="launch.with.command.line.mode.console.align">
						<term id="launch.with.command.line.mode.console.align.title">--mode=console-align
						<emphasis>--alignDir=<emphasis>&lt;path&gt;</emphasis></emphasis></term>
						<listitem>
						  <para>In this mode, OmegaT will align the files in the
						  /source folder of the project with those at the location
						  specified by the <emphasis>--alignDir</emphasis>
						  parameter.</para>
						  <para>The resulting TMX file is saved in the
						  /omegat folder as align.tmx. The file types that can be
						  aligned depend on whether the alignment is supported by the
						  file filter . Supported filters include: ILIAS Language
						  File, Java(TM) Resource Bundles, Key=Value Text, Magento
						  CE Locale CSV, MoodlePHP, Mozilla DTD, Mozilla FTL, PO,
						  RC, SubRip Subtitles, and Windows Resources.</para>
						  <para>The <emphasis>--alignDir</emphasis> parameter is
						  used to specify the location of the data in the target
						  language, which must be a folder containing the
						  translated files.</para>
						  <para>That folder must contain a translation in the
						  target language of the project. For instance, if the
						  project is EN-to-FR, the folder must contain a bundle
						  ending with _fr. The resulting TMX file is saved in
						  the /omegat folder as align.tmx.</para>
						</listitem>
					  </varlistentry>

					  <varlistentry id="launch.with.command.line.mode.console.stats">
						<term id="launch.with.command.line.mode.console.stats.title">--mode=console-stats <emphasis>&lt;path&gt;</emphasis></term>
						<listitem>
						  <variablelist>
							<varlistentry id="launch.with.command.line.console.stats.output.file">
							  <term id="launch.with.command.line.console.stats.output.file.title">--output-file=[stats-output-file]</term>
							  <listitem>
								<para>Prints to that file, or to standard output if absent. Without <emphasis>--stats-type</emphasis>, detects format from file extension. The output defaults to xml.</para>
							  </listitem>
							</varlistentry>
							<varlistentry id="launch.with.command.line.console.stats.output.format">
							  <term id="launch.with.command.line.console.stats.output.format.title">--stats-type=[xml|text][txt][json]]]</term>
							  <listitem>
								<para>Requires <emphasis>--output-file</emphasis>. Specifies the output format.</para>
							  </listitem>
							</varlistentry>
						  </variablelist>
						  <para>The data is the same as when using <link linkend="menus.tools.statistics" endterm="menus.tools.statistics.title"/>.
						  </para>
						</listitem>
					  </varlistentry>
					</variablelist>												
				  </listitem>								
				</varlistentry>
			  </variablelist>
			</listitem>
		  </varlistentry>	
		  <varlistentry id="launch.with.command.line.non.gui.mode.options.">
			<term id="launch.with.command.line.non.gui.mode.options.title">Non-gui mode options:</term>
			<listitem>
			  <variablelist>
				<varlistentry id="launch.with.command.line.quiet">
				  <term id="launch.with.command.line.quiet.title">--quiet</term>
				  <listitem><para>Minimize the output shown on the command
				  line.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.script.">
				  <term id="launch.with.command.line.script.title">--script=<emphasis><emphasis>&lt;path&gt;</emphasis></emphasis></term>
				  <listitem>
					<para>A script file to run when a project event is
					triggered.</para>
				  </listitem>
				</varlistentry>
				<varlistentry id="launch.with.command.line.tag.validation.abort.warn.">
				  <term id="launch.with.command.line.tag.validation.abort.warn.title">--tag-validation=[abort|warn]</term>
				  <listitem>
					<para>Check tag issues.
					<itemizedlist>
					  <listitem>
						<para>Abort: Exit with an error if there are tag issues.</para>
					  </listitem>
					  <listitem>
						<para>Warn: Show warnings without exiting if there are tag issues.</para>
					  </listitem>											
					</itemizedlist>
					<note>
					  <para>Reports about tag issues are output to the terminal
					  window.</para>
					</note>
					</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </para>
	</section>
  </section>
</section>
