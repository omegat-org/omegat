<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../docbook-xml-4.5/docbookx.dtd">
<section id="windows.scripts">
  <title id="windows.scripts.title"><link linkend="windows.scripts"> </link><guilabel>Scripting</guilabel></title>

  <para>Scripts are short programs (similar to macros in office applications)
  that can be used to automate tasks as well as to extend or customize OmegaT
  functionality. They can be written by users in any language understood by the
  underlying Java virtual machine.</para>


  <para>The Scripting window allows you to load an existing script and run it on
  the current project.</para>

  <para>Use <link endterm="menus.tools.title" linkend="menus.tools"/><link
  endterm="menus.tools.scripting.title" linkend="menus.tools.scripting"/> to
  access the window.</para>

  <section id="windows.scripts.folder">
	<title id="windows.scripts.folder.title"><link linkend="windows.scripts.folder"> </link>The script folder</title>

	<para>By default, scripts are stored in the <link
	linkend="application.folder.scripts"
	endterm="application.folder.scripts.title"/> folder of the OmegaT
	application folder.</para>

	<para>New scripts added there will appear in the list of available scripts
	in the left-hand panel of the window.</para>

	<warning>
      <para>If no list of scripts is displayed on the left side of 
      the script editor window, use the Scripting window <guimenu>File</guimenu> >
      <guimenuitem>Set Scripts Folder...</guimenuitem> menu to set 
      the location of the scripts.</para>
	</warning>

	<para>Additional scripts can be found here: <ulink
	url="https://sourceforge.net/projects/omegatscripts/">OmegaT
	Scripts</ulink>. Just copy the file to the <link
	linkend="application.folder.scripts"
	endterm="application.folder.scripts.title"/> folder.</para>

	<para>Some scripts are <emphasis>event</emphasis>-based. The folder containing
	the scripts includes subfolders corresponding to the available events. You can
	trigger scripts automatically by placing them in the appropriate subfolder:</para>

	<variablelist>
	  <varlistentry id="application.folder.scripts.application.shutdown">
		<term id="application.folder.scripts.application.shutdown.title"><link linkend="application.folder.scripts.application.shutdown"> </link>application_shutdown</term>
		<listitem><para>Scripts in this folder are launched before OmegaT shuts down.</para></listitem>
	  </varlistentry>
	  <varlistentry id="application.folder.scripts.application.startup">
		<term id="application.folder.scripts.application.startup.title"><link linkend="application.folder.scripts.application.startup"> </link>application_startup</term>
		<listitem><para>Scripts in this folder are launched as soon as the scripting engine is available, shortly after OmegaT starts.</para></listitem>
	  </varlistentry>
	  <varlistentry id="application.folder.scripts.entry.activated">
		<term id="application.folder.scripts.entry.activated.title"><link linkend="application.folder.scripts.entry.activated"> </link>entry_activated</term>
		<listitem><para>Scripts in this folder are launched when editing a new segment. The segment is in the <code>newEntry></code> binding.</para></listitem>
	  </varlistentry>
	  <varlistentry id="application.folder.scripts.new.file">
		<term id="application.folder.scripts.new.file.title"><link linkend="application.folder.scripts.new.file"> </link>new_file</term>
		<listitem><para>Scripts in this folder are launched when the editor switches to the next file in the project. The new filename is in the <code>activeFileName</code> binding.</para></listitem>
	  </varlistentry>
	  <varlistentry id="application.folder.scripts.new.word">
		<term id="application.folder.scripts.new.word.title"><link linkend="application.folder.scripts.new.word"> </link>new_word</term>
		<listitem><para>Scripts in this folder are launched when a new word is edited in the Editor window. The new word is available from the <code>newWord</code> binding.</para></listitem>
	  </varlistentry>
	  <varlistentry id="application.folder.scripts.project.changed">
		<term id="application.folder.scripts.project.changed.title"><link linkend="application.folder.scripts.project.changed"> </link>project_changed</term>
		<listitem><para>Scripts in this folder are launched when the state of the project changes. An <code>eventType</code> object is bound and can take the following values: CLOSE, COMPILE, CREATE, LOAD, or SAVE.</para></listitem>
	  </varlistentry>
	</variablelist>

	<para>These subfolders are already created in the script folder that comes with the
	distribution.</para>
	
	<warning>
	  <para>Scripts are also launched when you are executing other scripts. 
	  Consequently, in a large project, an <code>entry_activated</code> script is
	  called frequently when a search/replace type of script that
	  loops through all segments is used, rendering the application
	  unresponsive.</para>
	</warning>
  </section>
  
  <section id="windows.scripts.usage">
	<title id="windows.scripts.usage.title"><link linkend="windows.scripts.usage"> </link>Usage</title>

	<itemizedlist>
      <listitem>
		<para>Click the name of a script in the list in the left-hand panel. The
		script is loaded in the editor.</para>
      </listitem>

      <listitem>
		<para>Click the <guibutton>Run</guibutton> button at the bottom of the window, or
		press <keycombo><keycap>C</keycap><keycap>R</keycap></keycombo> to
		launch the script immediately.</para>
      </listitem>

      <listitem>
		<para>To create a shortcut to a script that you use frequently,
		right-click one of the <guibutton>&lt;1&gt;</guibutton> to
		<guibutton>&lt;12&gt;</guibutton> buttons at the bottom of the window
		and select <guilabel>Add Script</guilabel> to assign the script to that
		number.</para>

		<para>If you want to detach the script from the shortcut, right-click on
		its button and select <guilabel>Remove Script</guilabel></para>
      </listitem>

      <listitem>
		<para>You can then click on the number to run its assigned script. You
		can also run the script from the <link linkend="menus.tools"
		endterm="menus.tools.title"/><link linkend="menus.tools.scripting"
		endterm="menus.tools.scripting.title"/> menu by selecting the applicable
		menu item or by pressing the associated shortcut
		(<keycombo><keycap>C</keycap><keycap>A</keycap><keycap>F1 to
		F12</keycap></keycombo>).</para>
      </listitem>
	</itemizedlist>

	<warning>
      <para>Linux users: depending on the configuration of your operating
      system, you may not have permission to write to the default scripts folder
      location.</para>

      <para>In such cases, you will have to copy or move the script folder to a
      location for which you have write permissions, such as the <link
      linkend="configuration.folder.location">configuration folder</link>, if
      you want to write your own scripts, add new ones, or modify existing
      ones.</para>

      <para>If you do have permission to write to the default folder, make sure
      you change the name, or make a backup, of any scripts you modify, as they
      will be overwritten when OmegaT is updated.</para>
	</warning>
  </section>

  <section id="windows.scripts.distribution">
    <title id="windows.scripts.distribution.title"><link linkend="windows.scripts.distribution"> </link>Distributed scripts</title>

    <para>OmegaT comes with a number of scripts developed by OmegaT
    contributors. Use the script editor to open, run, or modify scripts
    directly, or to write new scripts for your own use.</para>

	<note>
	  <para>The scripts distributed with OmegaT are included for your convenience
	  but are not supported by the OmegaT development team.</para>
	</note>
	
	<para>Follow the instructions provided in the script itself.</para>

    <variablelist>
      <varlistentry id="windows.scripts.distribution.adapt.standard.tags">
        <term id="windows.scripts.distribution.adapt.standard.tags.title"><link linkend="windows.scripts.distribution.adapt.standard.tags"> </link>Adapt standard tags</term>

        <listitem>
          <para>Adapt standard tags when the Replace with Match command
          invoked.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.auto.open.last.project">
        <term id="windows.scripts.distribution.auto.open.last.project.title"><link linkend="windows.scripts.distribution.auto.open.last.project"> </link>Auto Open Last Project</term>

        <listitem>
          <para>Automatically open the last used OmegaT project.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.check.same.segment">
        <term id="windows.scripts.distribution.check.same.segment.title"><link linkend="windows.scripts.distribution.check.same.segment"> </link>Check Same Segment</term>

        <listitem>
          <para>Check for identical segments (case sensitive).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.currency.translator">
        <term id="windows.scripts.distribution.currency.translator.title"><link linkend="windows.scripts.distribution.currency.translator"> </link>Currency Translator</term>

        <listitem>
          <para>Translate currencies representation according to the source and
          target locales.</para>

          <para>This will translate a string like “$123,399.99” to “123 399,99
          USD”, for example.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.example.gui.scripting">
        <term id="windows.scripts.distribution.example.gui.scripting.title"><link linkend="windows.scripts.distribution.example.gui.scripting"> </link>Example - GUI Scripting</term>

        <listitem>
          <para>Example of GUI scripting.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.example.key.binding">
        <term id="windows.scripts.distribution.example.key.binding.title"><link linkend="windows.scripts.distribution.example.key.binding"> </link>Example - Key Binding</term>

        <listitem>
          <para>Example of using a keybinding event.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.example.modify.segment">
        <term id="windows.scripts.distribution.example.modify.segment.title"><link linkend="windows.scripts.distribution.example.modify.segment"> </link>Example - Modify Segment</term>

        <listitem>
          <para>Example that shows how to modify a segment.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.example.search.and.replace">
        <term id="windows.scripts.distribution.example.search.and.replace.title"><link linkend="windows.scripts.distribution.example.search.and.replace"> </link>Example - Search and Replace</term>

        <listitem>
          <para>A simple search and replace script.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.external.spellcheck">
        <term id="windows.scripts.distribution.external.spellcheck.title"><link linkend="windows.scripts.distribution.external.spellcheck"> </link>External spellcheck</term>

        <listitem>
          <para>Writes all segments to a file named
          <filename>[project_name].doc</filename> and opens it in the default
          word processor for the system. Note that the file is a plain text
          file. The <filename>.doc</filename> extension simply ensures it opens
          in the word processor.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.extract.text.content">
        <term id="windows.scripts.distribution.extract.text.content.title"><link linkend="windows.scripts.distribution.extract.text.content"> </link>Extract Text Content</term>

        <listitem>
          <para>Extracts the content of the project to a single text file (one
          line per segment). See <ulink
          url="https://sourceforge.net/p/omegat/feature-requests/182/">RFE#182
          Extracts the content of the projects to text file</ulink>.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.non.breaking.space">
        <term id="windows.scripts.distribution.non.breaking.space.title"><link linkend="windows.scripts.distribution.non.breaking.space"> </link>Non-breaking space</term>

        <listitem>
          <para>Replace spaces with non-breakable spaces where appropriate in
          French.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.open.current.file">
        <term id="windows.scripts.distribution.open.current.file.title"><link linkend="windows.scripts.distribution.open.current.file"> </link>Open Current File</term>

        <listitem>
          <para>Open the current source file.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.open.glossary">
        <term id="windows.scripts.distribution.open.glossary.title"><link linkend="windows.scripts.distribution.open.glossary"> </link>Open Glossary</term>

        <listitem>
          <para>Open the writable glossary in an editor.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.open.project.folder">
        <term id="windows.scripts.distribution.open.project.folder.title"><link linkend="windows.scripts.distribution.open.project.folder"> </link>Open Project Folder</term>

        <listitem>
          <para>Open the project folder in the default file manager.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.open.tm.folder">
        <term id="windows.scripts.distribution.open.tm.folder.title"><link linkend="windows.scripts.distribution.open.tm.folder"> </link>Open TM Folder</term>

        <listitem>
          <para>Open the <filename class="directory">/tm</filename> folder.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.open.project.save.tmx">
        <term id="windows.scripts.distribution.open.project.save.tmx.title"><link linkend="windows.scripts.distribution.open.project.save.tmx"> </link>Open project_save.tmx.</term>

        <listitem>
          <para>Open project_save.tmx in a text editor.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.qa.check.rules">
        <term id="windows.scripts.distribution.qa.check.rules.title"><link linkend="windows.scripts.distribution.qa.check.rules"> </link>QA - Check Rules</term>

        <listitem>
          <para>QA script.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.qa.identical.segments">
        <term id="windows.scripts.distribution.qa.identical.segments.title"><link linkend="windows.scripts.distribution.qa.identical.segments"> </link>QA - Identical Segments</term>

        <listitem>
          <para>Check for identical segments (case sensitive).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.svn.cleanup.recursive">
        <term id="windows.scripts.distribution.svn.cleanup.recursive.title"><link linkend="windows.scripts.distribution.svn.cleanup.recursive"> </link>SVN - Cleanup (recursive)</term>

        <listitem>
          <para>Perform SVN cleanup on current project or any folder (recursively).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.show.same.segments">
        <term id="windows.scripts.distribution.show.same.segments.title"><link linkend="windows.scripts.distribution.show.same.segments"> </link>Show Same Segments</term>

        <listitem>
          <para>Display a list of segments where the source and target have
          identical content.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.spellcheck">
        <term id="windows.scripts.distribution.spellcheck.title"><link linkend="windows.scripts.distribution.spellcheck"> </link>Spellcheck</term>

        <listitem>
          <para>Global spell checking.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.strip.bidi.marks">
        <term id="windows.scripts.distribution.strip.bidi.marks.title"><link linkend="windows.scripts.distribution.strip.bidi.marks"> </link>Strip Bidi Marks</term>

        <listitem>
          <para>Remove bidi mark in the current target or in selection.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.strip.tags">
        <term id="windows.scripts.distribution.strip.tags.title"><link linkend="windows.scripts.distribution.strip.tags"> </link>Strip tags</term>

        <listitem>
          <para>Remove tags in the current target or selection.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.switch.colour.theme">
        <term id="windows.scripts.distribution.switch.colour.theme.title"><link linkend="windows.scripts.distribution.switch.colour.theme"> </link>Switch Colour Theme</term>

        <listitem>
          <para>Switch the colour theme used in the editor.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.tag.free.match">
        <term id="windows.scripts.distribution.tag.free.match.title"><link linkend="windows.scripts.distribution.tag.free.match"> </link>Tag-Free Match</term>

        <listitem>
          <para>Replace current target with a tag-free match.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.tagwipe">
        <term id="windows.scripts.distribution.tagwipe.title"><link linkend="windows.scripts.distribution.tagwipe"> </link>Tagwipe</term>

        <listitem>
          <para>Remove extraneous tags from docx documents.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.issue.provider.sample.groovy">
        <term id="windows.scripts.distribution.issue.provider.sample.groovy.title"><link linkend="windows.scripts.distribution.issue.provider.sample.groovy"> </link>issue_provider_sample.groovy</term>

        <listitem>
          <para>(no description)</para>
        </listitem>
      </varlistentry>

      <varlistentry id="windows.scripts.distribution.toolbar.groovy">
        <term id="windows.scripts.distribution.toolbar.groovy.title"><link linkend="windows.scripts.distribution.toolbar.groovy"> </link>toolbar.groovy</term>
        <listitem>
          <para>(no description)</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="windows.scripts.references">
    <title id="windows.scripts.references.title"><link linkend="windows.scripts.references"> </link>References</title>

    <variablelist>
      <varlistentry>
        <term>OmegaT Javadoc</term>

        <listitem>
          <para>The <ulink
          url="https://omegat.sourceforge.io/javadoc-latest/">OmegaT API</ulink>
          documentation.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Groovy</term>

        <listitem>
          <para>A dynamic language for the Java Virtual machine. It builds upon
          the strengths of Java, and adds powerful features inspired by
          languages like Python, Ruby and Smalltalk. See <ulink
          url="https://groovy-lang.org/documentation.html">Apache Groovy</ulink> for
          details.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>JavaScript</term>

        <listitem>
          <para>A prototype-based scripting language that is dynamic, weakly
          typed and has first-class functions. It is a multi-paradigm language
          that supports the object-oriented, imperative, and functional
          programming styles. See <ulink
          url="https://developer.oracle.com/databases/nashorn-javascript-part1.html">Practical
          Nashorn, Part 1: Introducing JavaScript, ECMAScript, and
          Nashorn</ulink> and <ulink
          url="https://www.ecma-international.org/ecma-262/5.1/">ECMAScript® 5.1
          Language Specification</ulink>.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>All languages have access to the OmegaT object model, with the project
    as the top object. For example, the following Groovy code snippet scans
    through all segments in every file in the current project and prints out the
    source and the target text of segments that contain a translation.</para>

    <programlisting>files = project.projectFiles;
for (i in 0 ..&lt; files.size())
	{
		for (j in 0 ..&lt; files[i].entries.size())
			{
				currSegment = files[i].entries[j];
				if (project.getTranslationInfo(currSegment))
					{
						source = currSegment.getSrcText();
						target = project.getTranslationInfo(currSegment).translation;
						console.println(source + " >>>> " + target);
				}     
			}
	}</programlisting>
  </section>
</section>
