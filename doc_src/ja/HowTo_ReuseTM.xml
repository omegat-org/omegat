<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<section id="howto.reusetm">
  <title>翻訳メモリの再利用</title>

  <para>最初にプロジェクトが作成された時点では、メインの翻訳メモリ <filename>project_save.tmx</filename> は空の状態です。この翻訳メモリは、翻訳作業を通じて徐々に蓄積していきます。このプロセスを加速させるために、既存の翻訳を再利用することができます。ある文が、すでに過去に一度翻訳されていて、しかもその内容が正しい場合、それをもう一度翻訳し直す必要はありません。翻訳メモリはまた、参照翻訳も含むことができます。欧州連合の多言語法律文書などはその典型です。</para>

  <para>OmegaT プロジェクト内で訳文ファイルを生成すると、プロジェクトの翻訳メモリは、OmegaTプロジェクトフォルダーに３種類のファイルとして出力されます（前述の説明を参照）。これら３つの TMX ファイル（<filename>-omegat.tmx</filename>、<filename>-level1.tmx</filename>、<filename>-level2.tmx</filename>）は「エクスポートした翻訳メモリ」、つまり現在のプロジェクトの内容をバイリンガル形式で外部出力したものと、みなすことができます。</para>

  <para>過去のプロジェクトで使用した翻訳メモリを再利用したいとき（たとえば、今度作成する新しいプロジェクトが「過去のものと非常に似ている」または「以前に使用したかもしれない専門用語を含んでいる」というような場合など）、この翻訳メモリを「入力用翻訳メモリ」として、新しいプロジェクトにインポートできます。この場合は、使いたい翻訳メモリを新しいプロジェクトの <filename class="directory">/tm</filename> フォルダーか <filename class="directory">tm/auto</filename> フォルダーに配置してください。前者では、翻訳メモリから見つかった分節が参考訳文ウィンドウに表示されます。後者では、下訳として訳文分節に自動挿入されます。</para>

  <para>デフォルトでは、<filename class="directory">tm</filename>フォルダーはプロジェクトのルートフォルダーの下（たとえば <filename class="directory">MyProject/tm</filename>）にあります。しかし必要であれば、プロジェクトの設定でその位置を変えてもかまいません。これは、過去に作成した翻訳メモリを何度も使用するような場合に便利です。たとえば、同じ顧客向けであったり、同じ分野の翻訳であったりする場合が挙げられます。この場合、使いやすい手順は以下の通りです：</para>

  <itemizedlist>
    <listitem>
      <para>特定の顧客や分野の翻訳メモリ用として、ハードディスク内に１つフォルダー（たとえば「保管フォルダー」）を作成する</para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para>プロジェクトを閉じて終了したとき、常に「エクスポートした」３つの翻訳メモリファイルを、プロジェクトのルートフォルダーから、その保管フォルダーにコピーしておく</para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para>同じ顧客または分野について、プロジェクトを新しく作成するときは、<guimenuitem>［プロジェクト］→「プロジェクト設定...］</guimenuitem> ウィンドウで、［翻訳メモリフォルダー］にその保管フォルダーを指定する</para>
    </listitem>
  </itemizedlist>

  <para>プロジェクトを開くときに、tm フォルダー内の全 TMX ファイルが読み込まれます。持っているすべての TMX ファイルをそこに置いておくと、OmegaT の動作が不必要に遅くなることがあるので、注意してください。それらの内容がいったん現在のプロジェクトの <filename>project_save.tmx</filename> に蓄積されたなら、もう必要ないファイルを削除してもよいでしょう。</para>

  <section>
    <title>翻訳メモリのインポートとエクスポート</title>

    <para>OmegaT は TMX バージョン 1.1 から 1.4b（レベル 1 と レベル 2 の両方）をインポートすることができます。これにより、他のツールで作成された翻訳メモリを、OmegaT で読み込むことができます。しかし、OmegaT はレベル 2 の（文書情報だけでなく、整形情報も含む）TMX ファイルに完全には対応していません。それでも、レベル 2 の TMX ファイルをインポートして、テキスト情報を OmegaT で利用することは可能です。ただし参考訳文の一致率は多少下がるかもしれません。</para>

    <para>OmegaT が翻訳メモリファイル（TMX ファイル）を読み込む際には、非常に厳密な処理が行われます。ファイルに何かのエラーを見つけると、OmegaT はその場所を通知します。</para>

    <para>一部で、不正な TMX ファイルを生成してしまうツールがあることが確認されています。そのような翻訳メモリを OmegaT に参照させるには、事前にファイルを修復しておく必要があります。でなければ、OmegaT はエラーでそのファイルを読み込めないでしょう。修正は簡単な操作で行えることが多く、OmegaT が出力するエラーメッセージはじゅうぶんその助けになります。不明な点があればユーザーグループに問い合わせてください。</para>

    <para>OmegaT はバージョン 1.4 の TMX ファイル（レベル 1、レベル 2 とも）を出力します。出力されたレベル 2 TMX ファイルは、レベル 2 の仕様に完全に準拠してはいませんが、それに近い水準です。TMX レベル 2 に対応した他の翻訳ツールは、このファイルから参考訳文を問題なく利用できます。もし、テキスト情報のみが必要な場合（整形情報が必要でない場合）は、OmegaT が作成したレベル 1 ファイルの方を使用してください。</para>
  </section>

  <section>
    <title>特定文書向け翻訳メモリの作成</title>

    <para>翻訳者のあいだで、TMX ファイルを共有したい場合があるとします。しかし、特定の文書に関する分節を除外したいか、逆にそれだけを含めたいという状況です。<filename>ProjectName-omegat.tmx</filename> そのものを共有するのは、論外です。以下に示す解決法は、いろいろあるやり方のひとつにすぎません。しかし試すのはとても簡単で、ファイルを破損する危険性もありません。</para>

    <itemizedlist>
      <listitem>
        <para>まず、まったく新しくプロジェクトをひとつ作成します。共有したい TMX に合わせて、言語ペアやプロジェクト名を適切に設定します（このあと作成される TMX ファイルには、このプロジェクトの名前が付きます）。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>翻訳メモリの対象にしたい原文文書を、<filename class="directory">source</filename> フォルダーにコピーします。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>元の（上記文書の翻訳を含む）翻訳メモリを、新しいプロジェクトの <filename class="directory">tm/auto</filename> フォルダーにコピーします。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>新しいプロジェクトを開始します。タグのエラーが無いか、<keycombo><keycap>Ctrl</keycap><keycap>T</keycap></keycombo> で確認してください。未翻訳分節は<keycombo><keycap>Ctrl</keycap><keycap>U</keycap></keycombo> で確認します。問題が無ければ、<keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo> を押して訳文ファイルを生成し、その内容を確認します。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>プロジェクトを終了しましょう。メインのプロジェクトフォルダーに３つの TMX ファイル（上記参照）が出力されているはずです。これには、指定した言語ペアの、かつ source フォルダーにコピーした文書だけの翻訳が含まれています。あとで使うために、それらを安全な場所にコピーしておきましょう。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>このプロジェクトを再利用するのは、避けたほうが賢明です。他と取り違えかねないので、用が済んだらプロジェクトごと削除するか、あるいはアーカイブ化して作業スペースから追い出しましょう。</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>翻訳メモリの共有</title>

    <para>翻訳者のチームで作業する場合、配布された専用のプロジェクトで各自が孤立して作業するよりも、ひとつの翻訳メモリを共有して作業できるほうが望ましいでしょう。</para>

    <para>OmegaT は SVN と Git という、２つの一般的なバージョン管理システム（VCS）に対応しています。これらは、オープンソースのライセンス下で利用可能です。OmegaT の場合は、すべてのプロジェクトフォルダーが VCS の管理下に入ります。原文ファイルフォルダーやプロジェクト設定のみならず、翻訳メモリも同様です。詳しくは次の章を参照してください。</para>
  </section>

  <section>
    <title>TMX ファイルと代替言語</title>

    <para>ここに、完了したプロジェクト（たとえばオランダ語の原文を英語に翻訳したもの）があるとします。次に、これを中国語に翻訳する必要が発生しました。翻訳者はオランダ語を解しませんが、英語であれば理解できます。このような状況では、蘭中翻訳を、蘭英の翻訳メモリを介して行うしかありません。</para>

    <para>この例における解決策は、既存の翻訳メモリを <filename class="directory">tm/tmx2source/</filename> フォルダーにコピーし、訳文言語を示すために ZH_CN.tmx とリネームすることです。編集ウィンドウの現在分節には、オランダ語の原文分節と共に英語の対訳も表示されます。翻訳者は両方を見ながら、中国語の訳文を作成することができます。</para>

    <para><emphasis role="bold">重要：</emphasis>補助用の TMX ファイルは必ず「XX_YY.tmx」形式にリネームしなければなりません。「XX_YY」はプロジェクトの訳文言語と同じコードです。たとえば上の例では、「ZH_CN.tmx」となっています。プロジェクトの原文言語コードと TMX の原文言語コードは、同一でなければなりません。例では「NL」がそれです。特定の言語ペアについて関連付けできるのは、TMX ファイルひとつだけです。したがって、関連付けたい翻訳メモリが複数ある場合は、それらを XX_YY.tmx にマージする必要があります。</para>
  </section>
</section>