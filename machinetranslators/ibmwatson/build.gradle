/**
 * IBM watson translator connector.
 */

plugins {
    id 'java-library'
}

dependencies {
    compileOnly(project.rootProject)
    if (providedLibsDir.directory) {
        compileOnly fileTree(dir: providedLibsDir, includes: ['**/*commons-*.jar', '**/jackson*.jar'])
    } else {
        compileOnly(libs.commons.io)
        compileOnly(libs.commons.text)
        // JSON parser
        compileOnly(libs.jackson.core)
        compileOnly(libs.jackson.databind)
    }
    testImplementation(testFixtures(project.rootProject))
    testImplementation(libs.jackson.core)
    testImplementation(libs.jackson.databind)
}

jar {
    archiveAppendix.set("connector")
    destinationDirectory.set(new File(rootProject.buildDir, "modules"))
    def pluginProp = loadProperties(file('plugin.properties'))
    manifest {
        attributes('License': 'GNU Public License version 3 or later',
                'Implementation-Version': pluginProp.Version,
                'OmegaT-Plugins': pluginProp.Class,
                'Plugin-Author': pluginProp.Author,
                'Plugin-Version': pluginProp.Version,
                'Plugin-Name': pluginProp.Name,
                'Plugin-Category': pluginProp.Category,
                'Plugin-Description': pluginProp.Description
        )
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
