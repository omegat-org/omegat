plugins {
    id 'java-library'
}

dependencies {
    compileOnly(project.rootProject)
    if (providedLibsDir.directory) {
        compileOnly fileTree(dir: providedLibsDir, includes: ['**/*commons-*.jar', '**/jackson*.jar'])
    } else {
        compileOnly 'commons-io:commons-io:2.11.0'
        compileOnly 'org.omegat:lib-mnemonics:1.1'
        compileOnly 'tokyo.northside:slf4j-format-jdk14:0.5.0'
        implementation 'org.omegat:jmyspell-core:1.0.0-beta-2'
        implementation 'org.languagetool:languagetool-core:6.1'
        implementation 'com.gitlab.dumonts:hunspell:2.1.1'
    }
}

jar {
    archiveAppendix.set("spellchecker")
    destinationDirectory.set(new File(rootProject.buildDir, "modules"))
    def pluginProp = loadProperties(file('plugin.properties'))
    manifest {
        attributes('License': 'GNU Public License version 3 or later',
                'Implementation-Version': pluginProp.Version,
                'OmegaT-Plugins': pluginProp.Class,
                'Plugin-Author': pluginProp.Author,
                'Plugin-Version': pluginProp.Version,
                'Plugin-Name': pluginProp.Name,
                'Plugin-Category': pluginProp.Category,
                'Plugin-Description': pluginProp.Description
        )
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
