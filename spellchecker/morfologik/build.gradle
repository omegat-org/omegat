plugins {
    id 'org.omegat.module-conventions'
}

dependencies {
    compileOnly(project.rootProject)
    if (providedModuleLibsDir.directory) {
        compileOnly fileTree(dir: providedCoreLibsDir, includes: ['**/commons-*.jar', '**/languagetool-core-*.jar',
                                       '**/lib-mnemonics-*.jar', '**/slf4j-format-jdk14-*.jar', '**/morfologik-*.jar'])
        implementation fileTree(dir: providedModuleLibsDir, includes: ['**/morfologik-*.jar'])
    } else {
        // morfologik stemming and speller are dependency of languagetool-core
        compileOnly(libs.morfologik.stemming)
        compileOnly(libs.morfologik.speller)
        compileOnly(libs.commons.io)
        compileOnly(libs.omegat.mnemonics)
        compileOnly(libs.slf4j.format.jdk14)
        compileOnly(libs.languagetool.core) {
            exclude module: 'guava'
            exclude module: 'jackson-databind'
            exclude module: 'language-detector'
            exclude module: 'hunspell'
            exclude group: 'com.google.android'
            exclude group: 'org.jetbrains'
            exclude module: 'morfologik-fsa'
        }
    }
    testImplementation(libs.junit4)
    testImplementation(libs.assertj)
    testImplementation(testFixtures(project.rootProject))
    testImplementation(libs.commons.io)
    testRuntimeOnly(libs.languagetool.en)
    testRuntimeOnly(libs.languagetool.de)
}

makeModuleTask(loadProperties(file('plugin.properties')))

test {
    dependsOn project(':language-modules:en').tasks.withType(Jar)
    dependsOn project(':language-modules:de').tasks.withType(Jar)
}
