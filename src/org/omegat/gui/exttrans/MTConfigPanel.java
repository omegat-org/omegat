/**************************************************************************
 OmegaT - Computer Assisted Translation (CAT) tool
          with fuzzy matching, translation memory, keyword search,
          glossaries, and translation leveraging into updated projects.

 Copyright (C) 2016 Aaron Madlon-Kay
               Home page: https://www.omegat.org/
               Support center: https://omegat.org/support

 This file is part of OmegaT.

 OmegaT is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 OmegaT is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
 **************************************************************************/

package org.omegat.gui.exttrans;

import javax.swing.JPanel;

import org.omegat.util.OStrings;

/**
 * @author Aaron Madlon-Kay
 */
@SuppressWarnings("serial")
public class MTConfigPanel extends JPanel {

    /** Creates new form MTConfigPanel */
    public MTConfigPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        descriptionPanel = new javax.swing.JPanel();
        descriptionTextArea = new javax.swing.JTextArea();
        itemsPanel = new javax.swing.JPanel();
        credentialsPanel = new javax.swing.JPanel();
        valueLabel1 = new javax.swing.JLabel();
        valueField1 = new javax.swing.JTextField();
        valueLabel2 = new javax.swing.JLabel();
        valueField2 = new javax.swing.JTextField();
        temporaryCheckBox = new javax.swing.JCheckBox();
        buttonsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        setMinimumSize(new java.awt.Dimension(250, 200));
        setLayout(new java.awt.BorderLayout());

        descriptionPanel.setLayout(new java.awt.BorderLayout());

        descriptionTextArea.setEditable(false);
        descriptionTextArea.setFont(valueLabel1.getFont());
        descriptionTextArea.setLineWrap(true);
        descriptionTextArea.setWrapStyleWord(true);
        descriptionTextArea.setAlignmentX(0.0F);
        descriptionTextArea.setOpaque(false);
        descriptionPanel.add(descriptionTextArea, java.awt.BorderLayout.CENTER);

        add(descriptionPanel, java.awt.BorderLayout.NORTH);

        itemsPanel.setLayout(new javax.swing.BoxLayout(itemsPanel, javax.swing.BoxLayout.PAGE_AXIS));

        credentialsPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 15, 0));
        credentialsPanel.setAlignmentX(0.0F);
        credentialsPanel.setLayout(new java.awt.GridBagLayout());

        valueLabel1.setLabelFor(valueField1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 5);
        credentialsPanel.add(valueLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        credentialsPanel.add(valueField1, gridBagConstraints);

        valueLabel2.setLabelFor(valueField2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 5);
        credentialsPanel.add(valueLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        credentialsPanel.add(valueField2, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(temporaryCheckBox, OStrings.getString("PREFS_CREDENTIAL_TEMPORARY_LABEL")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        credentialsPanel.add(temporaryCheckBox, gridBagConstraints);

        itemsPanel.add(credentialsPanel);

        add(itemsPanel, java.awt.BorderLayout.CENTER);

        buttonsPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 0, 0, 0));
        buttonsPanel.setAlignmentX(0.0F);
        buttonsPanel.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(okButton, OStrings.getString("BUTTON_OK")); // NOI18N
        jPanel2.add(okButton);

        org.openide.awt.Mnemonics.setLocalizedText(cancelButton, OStrings.getString("BUTTON_CANCEL")); // NOI18N
        jPanel2.add(cancelButton);

        buttonsPanel.add(jPanel2, java.awt.BorderLayout.EAST);

        add(buttonsPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    public javax.swing.JButton cancelButton;
    private javax.swing.JPanel credentialsPanel;
    private javax.swing.JPanel descriptionPanel;
    public javax.swing.JTextArea descriptionTextArea;
    public javax.swing.JPanel itemsPanel;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JButton okButton;
    public javax.swing.JCheckBox temporaryCheckBox;
    public javax.swing.JTextField valueField1;
    public javax.swing.JTextField valueField2;
    public javax.swing.JLabel valueLabel1;
    public javax.swing.JLabel valueLabel2;
    // End of variables declaration//GEN-END:variables
}
